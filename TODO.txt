- rename *Translator to *Compiler

GLSL BlueVM implementation:
- finish GLSL bv_library
- implement $$discard function
- convert (when necessary) i/u/b/dvecX to vecX in op_assign, in function calls, etc...
- test: v.xz = 1.0f;
- test:
float a(vec3 b) { return 1.0f; }
float a(vec2 b) { return 2.0f; }
a(v.xy);
- test: v.xyz++;

- breakpoints (& conditional breakpoints -> dbg.AddBreakpoint(line, "a == 2.1f") -> compile as bool bkpt() { return condition; } -> all variables global -> copy values from the main shader )
- Immediate(command) -> example: dbg.Immediate("a.x * 2.0f");
- StepOut() & Continue()
- #define & #version
- rename Library::GLSL()& Library::GLSLswizzle() to GLSL::Library() & GLSL::Swizzle()

- HLSL compiler